# AUTOGENERATED! DO NOT EDIT! File to edit: 74-validation-visuals.ipynb (unless otherwise specified).

__all__ = ['val_vis_bar']

# Cell
#dependencies

#nlp packages
import spacy
from spacy.util import minibatch, compounding

#manipulation of tables/arrays
import pandas as pd
import numpy as np
import copy
import json

import difflib
import matplotlib.pyplot as plt
import matplotlib as mpl

#internal imports
from .collate import *
from .split_data import *
from .modeling import *
from .model_performance_utils import *
from .xml_parser import *
from .unstructured2markup import *
from .utility import *
from .relationships import *
from .full_volume import *

# Cell

def val_vis_bar(validation_list):
    #Set up the figure
    plt.figure(figsize=(15,10))
    title_font = 30
    label_font = 22
    tick_font = 15
    colors_array = ['g']*9 + ['b']*5 + ['r']*8

    #Set up the variables
    val1 = validation_list[0]
    objects = val1.keys()
    y_pos = np.arange(len(objects))
    performance = [0]*y_pos

    #Gather each validation dictionary from each entry into a summed var
    for i in range(len(validation_list)):
        entry = validation_list[i]
        vals = list(entry.values())

        performance = [sum(x) for x in zip(performance, vals)]

    #Plot the final results
    plt.bar(y_pos, performance, align='center', alpha=0.5, color=colors_array)
    plt.xticks(ticks=y_pos, labels=objects, rotation=75, fontsize=tick_font)
    plt.xlabel('Checks', fontsize=label_font)
    plt.ylabel('Total Number of Validation Flags', fontsize=label_font)
    plt.title('Full Volume Validation Checks', fontsize=title_font)

    plt.show()